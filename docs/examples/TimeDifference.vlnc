#import regex
#import exception

#define timeBetween: {(start: String, end: String) -> (:Number) =>
  ## First, verify that both times are actually valid times
  $start $end both: {"\d\d:\d\d[ap]m" regex.matches} 
  #assertOrThrow: {[1, 1] ===} {"Times need to be formatted correctly" `exception.ValueException` #throw}

  ## Split times into [hours, minutes] in 24 hour time
  [$start, $end] map: {(time: String) =>
    "(\d\d):(\d\d)([ap])m" regex.groups #match: {
      @[hours, minutes, time] => {
        [0, 12] "ap" $time find index ~> offset
        [$hours parseInt $offset +, $minutes parseInt]
      }
    }
  }

  ## Convert both times to base [24, 60]
  map: {[24, 60] toBase}

  ## Get the difference between the two values
  fold: - abs

  ## Back to base 10 from base [24, 60]
  [24, 60] fromBase
  
  ## Calculate minutes as a fraction of 60 and add to hours
  fork: first last 60 / +
}